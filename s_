[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 9f48a47..3b5040b 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,2 +1,2 @@[m
 /node_modules[m
[31m-config.env[m
\ No newline at end of file[m
[32m+[m[32m/config.env[m
\ No newline at end of file[m
[1mdiff --git a/app.js b/app.js[m
[1mindex fa73608..f37808e 100644[m
[1m--- a/app.js[m
[1m+++ b/app.js[m
[36m@@ -1,32 +1,79 @@[m
[32m+[m[32m/* eslint-disable import/no-extraneous-dependencies */[m
 const express = require('express');[m
 const morgan = require('morgan');[m
[32m+[m[32mconst rateLimit = require('express-rate-limit');[m
[32m+[m[32mconst helmet = require('helmet');[m
[32m+[m[32mconst mongoSanitize = require('express-mongo-sanitize');[m
[32m+[m[32mconst hpp = require('hpp');[m
 [m
[32m+[m[32mconst AppError = require('./utils/appError');[m
[32m+[m[32mconst globalErrorHandler = require('./controllers/errorController');[m
 const tourRouter = require('./routes/tourRoute');[m
 //const userRouter = require('./routes/userRoute');[m
 [m
 //app init[m
 const app = express();[m
 [m
[31m-//1) Middleware[m
[32m+[m[32m//1) Global Middleware[m
[32m+[m[32m//Set security http headers[m
[32m+[m[32mapp.use(helmet());[m
[32m+[m
 if (process.env.NODE_ENV === `development`) {[m
   app.use(morgan('dev'));[m
 }[m
 [m
[31m-app.use(express.json());[m
[31m-app.use(express.static(`${__dirname}/public`));[m
[31m-[m
[31m-app.use((req, res, next) => {[m
[31m-  console.log(`Hello from the middleware...`);[m
[31m-  next();[m
[32m+[m[32m//Limit requests from same API[m
[32m+[m[32mconst limiter = rateLimit({[m
[32m+[m[32m  limit: 100,[m
[32m+[m[32m  statusCode: 429,[m
[32m+[m[32m  windowMs: 60 * 60 * 1000,[m
[32m+[m[32m  message: 'Too many req from this IP, please try again in an hour!'[m
 });[m
 [m
[32m+[m[32mapp.use('/api', limiter);[m
[32m+[m
[32m+[m[32m//Body parser, reading data from body into req.body[m
[32m+[m[32mapp.use(express.json({ limit: '10kb' }));[m
[32m+[m
[32m+[m[32m//Data sanitization NOSQL query injection[m
[32m+[m[32mapp.use(mongoSanitize());[m
[32m+[m
[32m+[m[32m//Prevent parameter pollution[m
[32m+[m[32mapp.use([m
[32m+[m[32m  hpp({[m
[32m+[m[32m    whitelist: [[m
[32m+[m[32m      'duration',[m
[32m+[m[32m      'ratingsQuantity',[m
[32m+[m[32m      'ratingsAverage',[m
[32m+[m[32m      'maxGroupSize',[m
[32m+[m[32m      'difficulty',[m
[32m+[m[32m      'price'[m
[32m+[m[32m    ][m
[32m+[m[32m  })[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m//cspisawesome[m
 app.use((req, res, next) => {[m
   req.requestTime = new Date().toISOString();[m
[32m+[m[32m  res.setHeader([m
[32m+[m[32m    'Content-Security-Policy',[m
[32m+[m[32m    "script-src 'self' https://apis.google.com"[m
[32m+[m[32m  );[m
   next();[m
 });[m
 [m
[32m+[m[32m//Serving static files[m
[32m+[m[32mapp.use(express.static(`${__dirname}/public`));[m
[32m+[m
 //Routes[m
 app.use(`/api/v1/tours`, tourRouter);[m
 //app.use(`/api/v1/users`, userRouter);[m
 [m
[32m+[m[32mapp.all('*', (req, res, next) => {[m
[32m+[m[32m  next(new AppError(`Can't find ${req.originalUrl} on this server!`, 404));[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconsole.log(process.env.NODE_ENV);[m
[32m+[m[32mapp.use(globalErrorHandler);[m
[32m+[m
 module.exports = app;[m
[1mdiff --git a/config.env b/config.env[m
[1mindex e27eec0..fb4fd46 100644[m
[1m--- a/config.env[m
[1m+++ b/config.env[m
[36m@@ -1,4 +1,5 @@[m
[31m-NODE_ENV=development[m
[32m+[m[32mNODE_ENV=production[m
 PORT=3000[m
 USERNAME=wexox[m
[31m-PASSWORD=123456[m
\ No newline at end of file[m
[32m+[m[32mDATABASE=mongodb+srv://dbTours:<password>@cluster0.myge4.mongodb.net/natours[m
[32m+[m[32mDATABASE_PASSWORD=PETSAbb3mKRVNhd6[m
\ No newline at end of file[m
[1mdiff --git a/controllers/tourController.js b/controllers/tourController.js[m
[1mindex 3138c7d..29ffee9 100644[m
[1m--- a/controllers/tour